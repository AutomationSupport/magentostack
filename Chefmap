---
id: magentostack
name: magento
roles: [master]
is: application
provides:
- application: http
requires:
- host: linux
- database: mysql
supports:
- session-cache:
    interface: redis
    resource_type: cache
- object-cache:
    interface: redis
    resource_type: cache
- page-cache:
    interface: redis
    resource_type: cache
- all-redis:
    interface: redis
    resource_type: cache
- volume: nfs
- logging: logstash
options:
  "domain":
    type: string
  "http_port":
    type: integer
    default: 80
  "https_port":
    type: integer
    default: 443
  "install_flavor":
    type: string
    default: community
  "php_version":
    type: string
  "install_method":
    type: string
    default: ark
  "git_repo":
    type: string
  "git_revision":
    type: string
    default: master
  "git_deploykey":
    type: string
  "admin_frontname":
    type: string
    default: admin
  "firstname":
    type: string
    default: Admin
  "lastname":
    type: string
    default: User
  "email":
    type: string
    required: true
  "newrelic":
    type: string
  "username":
    type: string
    default: MagentoAdmin
    required: true
  "password":
    type: string
    default: =generate_password(min_length=12, required_chars=["0123456789", "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ"])
    required: true
  "encryption_key":
    type: string
    required: true
  "demo":
    type: boolean
    default: true
    required: true
  "newrelic":
    type: boolean
    default: false
    required: true
#  "database_privileges":
#    type: string
#    default: all
#    required: true
  "database_prefix":
    type: string
    default: magento_
run-list:
  recipes:
  - platformstack
  - platformstack::rackops_rolebook
  - magentostack::apache-fpm
  - magentostack::magento_install
  - magentostack::newrelic
  - magentostack::_find_mysql
  - magentostack::magento_configure
  - magentostack::magento_admin
  - magentostack::nfs_client
maps:
- value: installer
  targets:
  - attributes://magentostack/configure_method
- value: {{ setting('http_port') }}
  targets:
  - attributes://magentostack/web/http_port
- value: {{ setting('https_port') }}
  targets:
  - attributes://magentostack/web/https_port
- value: {{ deployment.id }}
  targets:
  - attributes://magentostack/web/ssl_custom_databag_item
- value: {{ bool(parse_url(setting('url')).scheme == 'https') }}
  targets:
  - attributes://magentostack/web/ssl_custom
  - attributes://magentostack/web/ssl
- value: |
    {{ parse_url(setting('url')).certificate | indent(4) }}
  targets:
  - encrypted-databags://certificates/{{deployment.id}}/cert
- value: |
    {{ parse_url(setting('url')).private_key | indent(4) }}
  targets:
  - encrypted-databags://certificates/{{deployment.id}}/key
- value: |
    {{ parse_url(setting('url')).intermediate_key | indent(4) }}
  targets:
  - encrypted-databags://certificates/{{deployment.id}}/chain
- value: {{ setting('install_flavor') }}
  targets:
  - attributes://magentostack/flavor
- value: {{ setting('install_method') }}
  targets:
  - attributes://magentostack/install_method
- value: {{ setting('php_version') }}
  targets:
  - attributes://magentostack/php/version
- value: {{ setting('git_repo') }}
  targets:
  - attributes://magentostack/git_repository
- value: {{ setting('git_revision') }}
  targets:
  - attributes://magentostack/git_revision
- value: "{{ setting('git_deploykey') | base64 }}"
  targets:
  - attributes://magentostack/git_deploykey
- value: {{ setting('domain') }}
  targets:
  - attributes://magentostack/web/domain
- value: {{ setting('demo') }}
  targets:
  - attributes://magentostack/demo/enabled
- value: {{ setting('newrelic') }}
  targets:
  - attributes://magentostack/newrelic/application_monitoring/php/enabled
- value: {{ setting('admin_frontname') }}
  targets:
  - attributes://magentostack/config/admin_frontname
- value: {{ setting('firstname') }}
  targets:
  - attributes://magentostack/config/admin_user/firstname
- value: {{ setting('lastname') }}
  targets:
  - attributes://magentostack/config/admin_user/lastname
- value: {{ setting('email') }}
  targets:
  - attributes://magentostack/config/admin_user/email
- value: {{ setting('newrelic') }}
  targets:
  - attributes://newrelic/license
- value: {{ setting('username') }}
  targets:
  - attributes://magentostack/config/admin_user/username
  - outputs://resources/{{resource.index}}/instance/interfaces/magento/username
- value: {{ setting('password') }}
  targets:
  - attributes://magentostack/config/admin_user/password/
  - outputs://resources/{{resource.index}}/instance/interfaces/magento/password
- value: {{ setting('encryption_key') }}
  targets:
  - attributes://magentostack/config/encryption_key
  - outputs://resources/{{resource.index}}/instance/interfaces/magento/encryption_key
# Database Setup (Values required by MySQL cookbook)
- source: requirements://database:mysql/host
  targets:
  - attributes://mysql-multi/master
  - attributes://magentostack/config/db/host
- source: requirements://database:mysql/port
  targets:
  - attributes://magentostack/config/db/port
- source: requirements://database:mysql/username
  targets:
  - attributes://magentostack/mysql/databases/db1/mysql_user
  - outputs://resources/{{resource.index}}/instance/interfaces/mysql/magento/username
- source: requirements://database:mysql/password
  targets:
  - attributes://magentostack/mysql/databases/db1/mysql_password
  - outputs://resources/{{resource.index}}/instance/interfaces/mysql/magento/password
- value: "sessions"
  targets:
  - attributes://magentostack/redis/override_session_name
- source: supported://session-cache/host
  targets:
  - attributes://magentostack/redis/override_session_host
- source: supported://session-cache/port
  targets:
  - attributes://magentostack/redis/override_session_port
- source: supported://session-cache/password
  targets:
  - attributes://magentostack/redis/password_session
- value: "objects"
  targets:
  - attributes://magentostack/redis/override_object_name
- source: supported://object-cache/host
  targets:
  - attributes://magentostack/redis/override_object_host
- source: supported://object-cache/port
  targets:
  - attributes://magentostack/redis/override_object_port
- source: supported://object-cache/password
  targets:
  - attributes://magentostack/redis/password_object
- value: "FPC"
  targets:
  - attributes://magentostack/redis/override_page_name
- source: supported://page-cache/host
  targets:
  - attributes://magentostack/redis/override_page_host
- source: supported://page-cache/port
  targets:
  - attributes://magentostack/redis/override_page_port
- source: supported://page-cache/password
  targets:
  - attributes://magentostack/redis/password_page
- source: supported://all-redis/private_ip
  targets:
  - attributes://magentostack/all-redis/host
## NFS
- source: supported://volume:nfs/ip
  targets:
  - attributes://magentostack/nfs_server/override_host
- source: supported://volume:nfs/export_name
  targets:
  - attributes://magentostack/nfs_server/export_name
- source: supported://volume:nfs/export_root
  targets:
  - attributes://magentostack/nfs_server/export_root
## Platformstack
- value: false
  targets:
  - attributes://platformstack/omnibus_updater/enabled
  - attributes://platformstack/consul/enabled
- value: "yes"
  targets:
  - attributes://openssh/server/password_authentication
  - attributes://openssh/server/permit_root_login

output:
  resources:
    '{{resource.index}}':
      instance:
        interfaces:
          magento:
            username: {{setting('username')}}
            password: {{setting('password')}}
          mysql:
            server_root_password: {{ setting('database_root_password') }}
            magento:
              password: {{setting('database_password')}}
              username: {{setting('database_username')}}
              encryption_key: {{setting('encryption_key')}}
              # note host is written as output of a map

---
id: magentostack-worker
name: magento
roles: [worker]
is: application
provides:
- application: http
requires:
- host: linux
- database: mysql
supports:
- session-cache:
    interface: redis
    resource_type: cache
- object-cache:
    interface: redis
    resource_type: cache
- page-cache:
    interface: redis
    resource_type: cache
- all-redis:
    interface: redis
    resource_type: cache
- volume: nfs
- logging: logstash
options:
  "domain":
    type: string
  "http_port":
    type: integer
    default: 80
  "https_port":
    type: integer
    default: 443
  "install_flavor":
    type: string
    default: community
  "php_version":
    type: string
  "install_method":
    type: string
    default: ark
  "git_repo":
    type: string
  "git_revision":
    type: string
    default: master
  "git_deploykey":
    type: string
  "admin_frontname":
    type: string
    default: admin
  "firstname":
    type: string
    default: Admin
  "lastname":
    type: string
    default: User
  "email":
    type: string
    required: true
  "newrelic":
    type: string
  "username":
    type: string
    default: MagentoAdmin
    required: true
  "password":
    type: string
    default: =generate_password(min_length=12, required_chars=["0123456789", "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ"])
    required: true
  "encryption_key":
    type: string
    required: true
  "demo":
    type: boolean
    default: true
    required: true
  "newrelic":
    type: boolean
    default: false
    required: true
#  "database_privileges":
#    type: string
#    default: all
#    required: true
  "database_prefix":
    type: string
    default: magento_
run-list:
  recipes:
  - platformstack
  - platformstack::rackops_rolebook
  - magentostack::apache-fpm
  - magentostack::magento_install
  - magentostack::newrelic
  - magentostack::_find_mysql
  - magentostack::magento_configure
  - magentostack::nfs_client
maps:
- value: template
  targets:
  - attributes://magentostack/configure_method
- value: {{ setting('http_port') }}
  targets:
  - attributes://magentostack/web/http_port
- value: {{ setting('https_port') }}
  targets:
  - attributes://magentostack/web/https_port
- value: {{ deployment.id }}
  targets:
  - attributes://magentostack/web/ssl_custom_databag_item
- value: {{ bool(parse_url(setting('url')).scheme == 'https') }}
  targets:
  - attributes://magentostack/web/ssl_custom
  - attributes://magentostack/web/ssl
- value: |
    {{ parse_url(setting('url')).certificate | indent(4) }}
  targets:
  - encrypted-databags://certificates/{{deployment.id}}/cert
- value: |
    {{ parse_url(setting('url')).private_key | indent(4) }}
  targets:
  - encrypted-databags://certificates/{{deployment.id}}/key
- value: |
    {{ parse_url(setting('url')).intermediate_key | indent(4) }}
  targets:
  - encrypted-databags://certificates/{{deployment.id}}/chain
- value: {{ setting('install_flavor') }}
  targets:
  - attributes://magentostack/flavor
- value: {{ setting('install_method') }}
  targets:
  - attributes://magentostack/install_method
- value: {{ setting('php_version') }}
  targets:
  - attributes://magentostack/php/version
- value: {{ setting('git_repo') }}
  targets:
  - attributes://magentostack/git_repository
- value: {{ setting('git_revision') }}
  targets:
  - attributes://magentostack/git_revision
- value: "{{ setting('git_deploykey') | base64 }}"
  targets:
  - attributes://magentostack/git_deploykey
- value: {{ setting('domain') }}
  targets:
  - attributes://magentostack/web/domain
- value: {{ setting('demo') }}
  targets:
  - attributes://magentostack/demo/enabled
- value: {{ setting('newrelic') }}
  targets:
  - attributes://magentostack/newrelic/application_monitoring/php/enabled
- value: {{ setting('admin_frontname') }}
  targets:
  - attributes://magentostack/config/admin_frontname
- value: {{ setting('firstname') }}
  targets:
  - attributes://magentostack/config/admin_user/firstname
- value: {{ setting('lastname') }}
  targets:
  - attributes://magentostack/config/admin_user/lastname
- value: {{ setting('email') }}
  targets:
  - attributes://magentostack/config/admin_user/email
- value: {{ setting('newrelic') }}
  targets:
  - attributes://newrelic/license
- value: {{ setting('username') }}
  targets:
  - attributes://magentostack/config/admin_user/username
  - outputs://resources/{{resource.index}}/instance/interfaces/magento/username
- value: {{ setting('password') }}
  targets:
  - attributes://magentostack/config/admin_user/password/
  - outputs://resources/{{resource.index}}/instance/interfaces/magento/password
- value: {{ setting('encryption_key') }}
  targets:
  - attributes://magentostack/config/encryption_key
  - outputs://resources/{{resource.index}}/instance/interfaces/magento/encryption_key
# Database Setup (Values required by MySQL cookbook)
- source: requirements://database:mysql/host
  targets:
  - attributes://mysql-multi/master
  - attributes://magentostack/config/db/host
- source: requirements://database:mysql/port
  targets:
  - attributes://magentostack/config/db/port
- source: requirements://database:mysql/username
  targets:
  - attributes://magentostack/mysql/databases/db1/mysql_user
  - outputs://resources/{{resource.index}}/instance/interfaces/mysql/magento/username
- source: requirements://database:mysql/password
  targets:
  - attributes://magentostack/mysql/databases/db1/mysql_password
  - outputs://resources/{{resource.index}}/instance/interfaces/mysql/magento/password
- value: "session"
  targets:
  - attributes://magentostack/redis/override_session_name
- source: supported://session-cache/host
  targets:
  - attributes://magentostack/redis/override_session_host
- source: supported://session-cache/port
  targets:
  - attributes://magentostack/redis/override_session_port
- source: supported://session-cache/password
  targets:
  - attributes://magentostack/redis/password_session
- value: "object"
  targets:
  - attributes://magentostack/redis/override_object_name
- source: supported://object-cache/host
  targets:
  - attributes://magentostack/redis/override_object_host
- source: supported://object-cache/port
  targets:
  - attributes://magentostack/redis/override_object_port
- source: supported://object-cache/password
  targets:
  - attributes://magentostack/redis/password_object
- value: "FPC"
  targets:
  - attributes://magentostack/redis/override_page_name
- source: supported://page-cache/host
  targets:
  - attributes://magentostack/redis/override_page_host
- source: supported://page-cache/port
  targets:
  - attributes://magentostack/redis/override_page_port
- source: supported://page-cache/password
  targets:
  - attributes://magentostack/redis/password_page
- source: supported://all-redis/private_ip
  targets:
  - attributes://magentostack/all-redis/host
# NFS
- source: supported://volume:nfs/ip
  targets:
  - attributes://magentostack/nfs_server/override_host
- source: supported://volume:nfs/export_name
  targets:
  - attributes://magentostack/nfs_server/export_name
- source: supported://volume:nfs/export_root
  targets:
  - attributes://magentostack/nfs_server/export_root
## Platformstack
- value: false
  targets:
  - attributes://platformstack/omnibus_updater/enabled
  - attributes://platformstack/consul/enabled
- value: "yes"
  targets:
  - attributes://openssh/server/password_authentication
  - attributes://openssh/server/permit_root_login

output:
  resources:
    '{{resource.index}}':
      instance:
        interfaces:
          magento:
            username: {{setting('username')}}
            password: {{setting('password')}}
          mysql:
            server_root_password: {{ setting('database_root_password') }}
            magento:
              password: {{setting('database_password')}}
              username: {{setting('database_username')}}
              encryption_key: {{setting('encryption_key')}}
              # note host is written as output of a map

---
id: magentomysqlmaster
name: mysql
roles: [master]
is: database
provides:
- database: mysql
requires:
- host: linux
supports:
- logging: logstash
options:
  "database_root_password":
    type: string
    default: =generate_password(min_length=12, required_chars=["0123456789", "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ"])
    required: true
options:
  "magento_db_password":
    type: string
    default: =generate_password(min_length=12, required_chars=["0123456789", "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ"])
    required: true
run-list:
  recipes:
  - platformstack
  - platformstack::rackops_rolebook
  - magentostack::mysql_master
  - magentostack::mysql_holland
maps:
- value: {{ setting('database_root_password') }}
  targets:
  - attributes://mysql/server_root_password
  - outputs://resources/{{resource.index}}/instance/interfaces/mysql/server_root_password
- value: "3306"
  targets:
  - outputs://resources/{{resource.index}}/instance/interfaces/mysql/port
- value: "magento_db_user"
  targets:
  - attributes://magentostack/mysql/databases/db1/mysql_user
  - outputs://resources/{{resource.index}}/instance/interfaces/mysql/username
- value: {{ setting('magento_db_password') }}
  targets:
  - attributes://magentostack/mysql/databases/db1/mysql_password
  - outputs://resources/{{resource.index}}/instance/interfaces/mysql/password
- value: ["all"]
  targets:
  - attributes://magentostack/mysql/databases/db1/privileges
- source: requirements://host:linux/private_ip
  targets:
  - outputs://resources/{{resource.index}}/instance/interfaces/mysql/host
## Platformstack
- value: false
  targets:
  - attributes://platformstack/omnibus_updater/enabled
  - attributes://platformstack/consul/enabled
- value: "yes"
  targets:
  - attributes://openssh/server/password_authentication
  - attributes://openssh/server/permit_root_login
output:
  resources:
    '{{resource.index}}':
      instance:
        interfaces:
          mysql:
            server_root_password: {{ setting('database_root_password') }}

---
id: magentoredis
name: redis
is: cache
provides:
- cache: redis
requires:
- host: linux
supports:
- logging: logstash
options:
  "name":
    type: string
    default: cache_type
    required: true
    constraints:
    - in: ["sessions", "objects", "FPC"]
  "port":
    type: string
    default: 6379
    required: true
run-list:
  recipes:
  - platformstack
  - platformstack::rackops_rolebook
  - magentostack::redis_single
  - magentostack::redis_configure
maps:
- value: {{ setting('port') }}
  targets:
  - attributes://magentostack/redis/bind_port_single
- source: requirements://host:linux/private_ip
  targets:
  - outputs://resources/{{resource.index}}/instance/interfaces/redis/host
## Platformstack
- value: false
  targets:
  - attributes://platformstack/omnibus_updater/enabled
  - attributes://platformstack/consul/enabled
- value: "yes"
  targets:
  - attributes://openssh/server/password_authentication
  - attributes://openssh/server/permit_root_login
output:
  resources:
    '{{resource.index}}':
      instance:
        name: {{ setting('name') }}
        interfaces:
          redis:
            port: {{ setting('port') }}

---
id: magentoredisall
name: redis
is: cache
provides:
- cache: redis
requires:
- host: linux
supports:
- logging: logstash
run-list:
  recipes:
  - platformstack
  - platformstack::rackops_rolebook
  - magentostack::redis_page
  - magentostack::redis_object
  - magentostack::redis_session
  - magentostack::redis_configure
maps:
- value: "not needed"
  targets:
  - attributes://not/needed
## Platformstack
- value: false
  targets:
  - attributes://platformstack/omnibus_updater/enabled
  - attributes://platformstack/consul/enabled
- value: "yes"
  targets:
  - attributes://openssh/server/password_authentication
  - attributes://openssh/server/permit_root_login

---
id: magentonfs-server
name: nfs
roles: [server]
is: volume
provides:
- volume: nfs
requires:
- host: linux
supports:
- logging: logstash
options:
  "disk_filesystem":
    type: string
    default: ext4
    required: true
  "export_name":
    type: string
    default: magento_media
    required: true
  "export_root":
    type: string
    default: /mnt
    required: true
run-list:
  recipes:
  - apt
  - parted
  - platformstack
  - platformstack::rackops_rolebook
  - magentostack::partition_nfs_disk
  - magentostack::nfs_server
maps:
- value: "/dev/xvdb"
# - source: requirements://host:linux/instance/devices/data
  targets:
  - attributes://disk/device
- value: {{ setting('disk_filesystem') }}
  targets:
  - attributes://disk/fs
#- source: clients://volume:nfs/private_ip
- value: ['*']
  targets:
  - attributes://magentostack/nfs_server/override_allow
- value: {{ setting('export_name') }}
  targets:
  - attributes://magentostack/nfs_server/export_name
  - outputs://resources/{{resource.index}}/instance/interfaces/nfs/export_name
- value: {{ setting('export_root') }}
  targets:
  - attributes://magentostack/nfs_server/export_root
  - outputs://resources/{{resource.index}}/instance/interfaces/nfs/export_root
- source: requirements://host:linux/private_ip
  targets:
  - outputs://resources/{{resource.index}}/instance/interfaces/nfs/ip
## Platformstack
- value: false
  targets:
  - attributes://platformstack/omnibus_updater/enabled
  - attributes://platformstack/consul/enabled
- value: "yes"
  targets:
  - attributes://openssh/server/password_authentication
  - attributes://openssh/server/permit_root_login

---
id: magento-elkstack
name: elkstack
is: logging
provides:
- logging: logstash
requires:
- host: linux
options:
  "username":
    type: string
    default: kibana
  "password":
    type: string
    required: true
run-list:
  recipes:
  - platformstack
  - platformstack::rackops_rolebook
  - elkstack::java
  - elkstack::cluster
  - elkstack::acl
maps:
- value: {{ setting('username') }}
  targets:
  - attributes://elkstack/config/kibana/username
  - outputs://resources/{{resource.index}}/instance/interfaces/kibana/username
- value: {{ setting('password') }}
  targets:
  - attributes://elkstack/config/kibana/password
  - outputs://resources/{{resource.index}}/instance/interfaces/kibana/password
## Platformstack
- value: false
  targets:
  - attributes://platformstack/omnibus_updater/enabled
  - attributes://platformstack/consul/enabled
- value: "yes"
  targets:
  - attributes://openssh/server/password_authentication
  - attributes://openssh/server/permit_root_login
